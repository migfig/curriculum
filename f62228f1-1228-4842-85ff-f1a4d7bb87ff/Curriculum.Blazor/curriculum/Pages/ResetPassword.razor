@page "/reset-password"

@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<style>
    img {
        filter: opacity(0.9) blur(1px) grayscale(0.8);
        -webkit-filter: opacity(0.9) blur(1px) grayscale(0.8);
        -moz-filter: opacity(0.9) blur(1px) grayscale(0.8);
    }    
</style>

<MudGrid>
    <MudItem xs="12">
        <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.Center" Style="height: 90vh">
            <MudPaper Height="433px" Width="358px" Square Class="mud-theme-primary">
                <MudImage Src="images/thin-laptop-final.jpeg" ObjectFit="ObjectFit.Cover" Fluid="true" Alt="reset password page" Height="433"></MudImage>
            </MudPaper>
            <EditForm Model="resetPwdRequest" OnValidSubmit="ExecuteReset">
                <DataAnnotationsValidator />

                <MudCard Class="ml-n3">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Reset Password</MudText>
                            <MudText Typo="Typo.overline">Please enter and confirm your new password or</MudText>
                            <MudLink Typo="Typo.overline" Href="registration">register</MudLink>
                            <MudText Typo="Typo.overline">if you don't have any, or</MudText>
                            <MudLink Typo="Typo.overline" Href="login">login</MudLink>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.LockReset" Color="Color.Default" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudTextField Label="Email" Immediate="true" InputType="InputType.Email"
                            HelperText="Email should have a maximum of 50 characters in length" HelperTextOnFocus="true"
                            Counter="50" MaxLength="50" Adornment="Adornment.End"
                            AdornmentIcon="@Icons.Material.Filled.Email" AdornmentAriaLabel="Email"
                            Validation="@(new Func<string,int,IEnumerable<string>>(MaxCharacters))" Clearable="true"
                            Variant="Variant.Filled" @bind-Value="resetPwdRequest.Email"
                            For="@(() => resetPwdRequest.Email)" />
                        <MudTextField Label="Password" Immediate="true" InputType="@PasswordInputType"
                            HelperText="Password should have a maximum of 25 characters in length"
                            HelperTextOnFocus="true" Counter="25" MaxLength="25" Adornment="Adornment.End"
                            AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="() => ShowPassword = !ShowPassword"
                            Validation="@(new Func<string,int,IEnumerable<string>>(MaxCharacters))" Clearable="true"
                            Variant="Variant.Filled" @bind-Value="resetPwdRequest.Password"
                            For="@(() => resetPwdRequest.Password)" />
                        <MudTextField Label="Confirm Password" Immediate="true" InputType="@PasswordInputType"
                            HelperText="Password should have a maximum of 25 characters in length"
                            HelperTextOnFocus="true" Counter="25" MaxLength="25" Adornment="Adornment.End"
                            AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="() => ShowPassword = !ShowPassword"
                            Validation="@(new Func<string,int,IEnumerable<string>>(MaxCharacters))" Clearable="true"
                            Variant="Variant.Filled" @bind-Value="resetPwdRequest.ConfirmPassword"
                            For="@(() => resetPwdRequest.ConfirmPassword)" />
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" StartIcon="@Icons.Material.Outlined.Login" 
                            Disabled="@(resetPwdRequest.Password != resetPwdRequest.ConfirmPassword || string.IsNullOrEmpty(resetPwdRequest.Password) || string.IsNullOrEmpty(resetPwdRequest.ConfirmPassword))"
                            Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Reset</MudButton>
                    </MudCardActions>
                    @if (!resetResult.Succeeded && !string.IsNullOrEmpty(resetResult.Error))
                    {
                    <MudText Typo="Typo.overline" Color="Color.Error" Class="ml-2">@resetResult.Error</MudText>
                    }
                </MudCard>
            </EditForm>
        </MudStack>
    </MudItem>
</MudGrid>