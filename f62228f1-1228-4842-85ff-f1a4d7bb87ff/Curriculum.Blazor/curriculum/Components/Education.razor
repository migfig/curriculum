@implements IDisposable

@using Curriculum.Blazor

@if(Prefix != null) {
    @Prefix
}
<MudItem xs="12" md="12" lg="12">
    <MudText Typo="Typo.h6" Color="Color.Secondary" Style="text-transform: uppercase">
        <MudIcon Icon="@Icons.Material.TwoTone.School" Variant="Variant.Filled" Color="Color.Secondary"
            Size="Size.Small"></MudIcon> @Label
    </MudText>
</MudItem>
<MudTimeline TimelineAlign="TimelineAlign.Default" TimelineOrientation="TimelineOrientation.Vertical" TimelinePosition="TimelinePosition.Start" Style="width: 100%">
    @foreach(var education in Items.Where(c => c.IsEducation == true).OrderByDescending(o => o.EndDate)) {
        <MudTimelineItem Size="Size.Small" TimelineAlign="TimelineAlign.Start" Variant="Variant.Outlined" DotStyle="background-color: transparent" >
            <ItemContent>
                <MudText Typo="Typo.body1" Color="Color.Tertiary" Style="font-weight: 600">@education.Title</MudText>
                <MudText Typo="Typo.body2" Color="Color.Default" Style="font-weight: 100">@education.SchoolName</MudText>
                <MudText Typo="Typo.overline" Color="Color.Default" Style="font-weight: 600">@education.StartDate.ToString("MMM yyyy") - @education.EndDate.ToString("MMM yyyy")</MudText>
            </ItemContent>
            <ItemDot>
                <MudIcon Icon="@Icons.Material.TwoTone.School" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small"></MudIcon>
            </ItemDot>
        </MudTimelineItem>
    }
</MudTimeline>

@code {
    [Inject]
    private IApplicationState state {get; set;}

    [Parameter]
    public string Label {get; set;} = "Education";

    [Parameter]
    public ICollection<Certification> Items {get; set;} = null!;

    [Parameter]
    public RenderFragment? Prefix {get; set;}

    protected override async Task OnInitializedAsync()
    {
        state.OnChange += StateHasChanged;
    }
    
    public void Dispose() {
        state.OnChange -= StateHasChanged;
    }
}
